openapi: "3.0.0"
info:
  title: "jobs api"
  contact: {}
  version: "1.0"
servers:
  - url: "https://jobs-api-livid.vercel.app/api/v1"
    variables: {}
paths:
  "/jobs":
    get:
      tags:
        - "Jobs"
      summary: "All jobs"
      operationId: "Alljobs"
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    post:
      tags:
        - "Jobs"
      summary: "Create job"
      operationId: "Createjob"
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreatejobRequest"
                - example:
                    company: "Facebook"
                    position: "React native developer"
            example:
              company: "Facebook"
              position: "React native developer"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  "/jobs/{id}":
    delete:
      tags:
        - "Jobs"
      summary: "Delete job"
      operationId: "Deletejob"
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    get:
      tags:
        - "Jobs"
      summary: "single job"
      operationId: "singlejob"
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - "Jobs"
      summary: "update Job"
      operationId: "updateJob"
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/updateJobRequest"
                - example:
                    company: "Facebook"
                    position: "React native developer"
            example:
              company: "Facebook"
              position: "React native developer"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  "/auth/register":
    post:
      tags:
        - "Auth"
      summary: "Register"
      operationId: "Register"
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterRequest"
                - example:
                    name: "John"
                    email: "Johnpeter@gmail.com"
                    password: "johnpeter"
            example:
              name: "John"
              email: "Johnpeter@gmail.com"
              password: "johnpeter"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  "/auth/login":
    post:
      tags:
        - "Auth"
      summary: "Login user"
      operationId: "Loginuser"
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginuserRequest"
                - example:
                    email: "Johnpeter@gmail.com"
                    password: "johnpeter"
            example:
              email: "Johnpeter@gmail.com"
              password: "johnpeter"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    updateJobRequest:
      title: "updateJobRequest"
      required:
        - "company"
        - "position"
      type: "object"
      properties:
        company:
          type: "string"
        position:
          type: "string"
      example:
        company: "micrphone"
        position: "for rap"
    RegisterRequest:
      title: "RegisterRequest"
      required:
        - "name"
      type: "object"
      properties:
        name:
          type: "string"
      example:
        name: "solo"
    LoginuserRequest:
      title: "LoginuserRequest"
      required:
        - "email"
        - "password"
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
      example:
        email: "peter@gmail.com"
        password: "peter111"
    CreatejobRequest:
      title: "CreatejobRequest"
      required:
        - "company"
        - "position"
      type: "object"
      properties:
        company:
          type: "string"
        position:
          type: "string"
      example:
        company: "capo"
        position: "backend"
    securitySchemes:
      bearer:
        type: "http"
        scheme: "bearer"
security: []
tags:
  - name: "Misc"
    description: ""
  - name: "Jobs"
    description: ""
  - name: "Auth"
    description: ""
